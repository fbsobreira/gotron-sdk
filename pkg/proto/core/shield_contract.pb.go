// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: core/contract/shield_contract.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthenticationPath struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []bool                 `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationPath) Reset() {
	*x = AuthenticationPath{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationPath) ProtoMessage() {}

func (x *AuthenticationPath) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationPath.ProtoReflect.Descriptor instead.
func (*AuthenticationPath) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationPath) GetValue() []bool {
	if x != nil {
		return x.Value
	}
	return nil
}

type MerklePath struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AuthenticationPaths []*AuthenticationPath  `protobuf:"bytes,1,rep,name=authentication_paths,json=authenticationPaths,proto3" json:"authentication_paths,omitempty"`
	Index               []bool                 `protobuf:"varint,2,rep,packed,name=index,proto3" json:"index,omitempty"`
	Rt                  []byte                 `protobuf:"bytes,3,opt,name=rt,proto3" json:"rt,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MerklePath) Reset() {
	*x = MerklePath{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerklePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerklePath) ProtoMessage() {}

func (x *MerklePath) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerklePath.ProtoReflect.Descriptor instead.
func (*MerklePath) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{1}
}

func (x *MerklePath) GetAuthenticationPaths() []*AuthenticationPath {
	if x != nil {
		return x.AuthenticationPaths
	}
	return nil
}

func (x *MerklePath) GetIndex() []bool {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *MerklePath) GetRt() []byte {
	if x != nil {
		return x.Rt
	}
	return nil
}

type OutputPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputPoint) Reset() {
	*x = OutputPoint{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputPoint) ProtoMessage() {}

func (x *OutputPoint) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputPoint.ProtoReflect.Descriptor instead.
func (*OutputPoint) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{2}
}

func (x *OutputPoint) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *OutputPoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type OutputPointInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OutPoints     []*OutputPoint         `protobuf:"bytes,1,rep,name=out_points,json=outPoints,proto3" json:"out_points,omitempty"`
	BlockNum      int32                  `protobuf:"varint,2,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputPointInfo) Reset() {
	*x = OutputPointInfo{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputPointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputPointInfo) ProtoMessage() {}

func (x *OutputPointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputPointInfo.ProtoReflect.Descriptor instead.
func (*OutputPointInfo) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{3}
}

func (x *OutputPointInfo) GetOutPoints() []*OutputPoint {
	if x != nil {
		return x.OutPoints
	}
	return nil
}

func (x *OutputPointInfo) GetBlockNum() int32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type PedersenHash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PedersenHash) Reset() {
	*x = PedersenHash{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PedersenHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PedersenHash) ProtoMessage() {}

func (x *PedersenHash) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PedersenHash.ProtoReflect.Descriptor instead.
func (*PedersenHash) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{4}
}

func (x *PedersenHash) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type IncrementalMerkleTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Left          *PedersenHash          `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right         *PedersenHash          `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	Parents       []*PedersenHash        `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementalMerkleTree) Reset() {
	*x = IncrementalMerkleTree{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementalMerkleTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementalMerkleTree) ProtoMessage() {}

func (x *IncrementalMerkleTree) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementalMerkleTree.ProtoReflect.Descriptor instead.
func (*IncrementalMerkleTree) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{5}
}

func (x *IncrementalMerkleTree) GetLeft() *PedersenHash {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *IncrementalMerkleTree) GetRight() *PedersenHash {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *IncrementalMerkleTree) GetParents() []*PedersenHash {
	if x != nil {
		return x.Parents
	}
	return nil
}

type IncrementalMerkleVoucher struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *IncrementalMerkleTree `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	Filled        []*PedersenHash        `protobuf:"bytes,2,rep,name=filled,proto3" json:"filled,omitempty"`
	Cursor        *IncrementalMerkleTree `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	CursorDepth   int64                  `protobuf:"varint,4,opt,name=cursor_depth,json=cursorDepth,proto3" json:"cursor_depth,omitempty"`
	Rt            []byte                 `protobuf:"bytes,5,opt,name=rt,proto3" json:"rt,omitempty"`
	OutputPoint   *OutputPoint           `protobuf:"bytes,10,opt,name=output_point,json=outputPoint,proto3" json:"output_point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementalMerkleVoucher) Reset() {
	*x = IncrementalMerkleVoucher{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementalMerkleVoucher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementalMerkleVoucher) ProtoMessage() {}

func (x *IncrementalMerkleVoucher) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementalMerkleVoucher.ProtoReflect.Descriptor instead.
func (*IncrementalMerkleVoucher) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{6}
}

func (x *IncrementalMerkleVoucher) GetTree() *IncrementalMerkleTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

func (x *IncrementalMerkleVoucher) GetFilled() []*PedersenHash {
	if x != nil {
		return x.Filled
	}
	return nil
}

func (x *IncrementalMerkleVoucher) GetCursor() *IncrementalMerkleTree {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *IncrementalMerkleVoucher) GetCursorDepth() int64 {
	if x != nil {
		return x.CursorDepth
	}
	return 0
}

func (x *IncrementalMerkleVoucher) GetRt() []byte {
	if x != nil {
		return x.Rt
	}
	return nil
}

func (x *IncrementalMerkleVoucher) GetOutputPoint() *OutputPoint {
	if x != nil {
		return x.OutputPoint
	}
	return nil
}

type IncrementalMerkleVoucherInfo struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Vouchers      []*IncrementalMerkleVoucher `protobuf:"bytes,1,rep,name=vouchers,proto3" json:"vouchers,omitempty"`
	Paths         [][]byte                    `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrementalMerkleVoucherInfo) Reset() {
	*x = IncrementalMerkleVoucherInfo{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrementalMerkleVoucherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementalMerkleVoucherInfo) ProtoMessage() {}

func (x *IncrementalMerkleVoucherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementalMerkleVoucherInfo.ProtoReflect.Descriptor instead.
func (*IncrementalMerkleVoucherInfo) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{7}
}

func (x *IncrementalMerkleVoucherInfo) GetVouchers() []*IncrementalMerkleVoucher {
	if x != nil {
		return x.Vouchers
	}
	return nil
}

func (x *IncrementalMerkleVoucherInfo) GetPaths() [][]byte {
	if x != nil {
		return x.Paths
	}
	return nil
}

type SpendDescription struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ValueCommitment         []byte                 `protobuf:"bytes,1,opt,name=value_commitment,json=valueCommitment,proto3" json:"value_commitment,omitempty"`
	Anchor                  []byte                 `protobuf:"bytes,2,opt,name=anchor,proto3" json:"anchor,omitempty"`       // merkle root
	Nullifier               []byte                 `protobuf:"bytes,3,opt,name=nullifier,proto3" json:"nullifier,omitempty"` // used for check double spend
	Rk                      []byte                 `protobuf:"bytes,4,opt,name=rk,proto3" json:"rk,omitempty"`               // used for check spend authority signature
	Zkproof                 []byte                 `protobuf:"bytes,5,opt,name=zkproof,proto3" json:"zkproof,omitempty"`
	SpendAuthoritySignature []byte                 `protobuf:"bytes,6,opt,name=spend_authority_signature,json=spendAuthoritySignature,proto3" json:"spend_authority_signature,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SpendDescription) Reset() {
	*x = SpendDescription{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpendDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendDescription) ProtoMessage() {}

func (x *SpendDescription) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendDescription.ProtoReflect.Descriptor instead.
func (*SpendDescription) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{8}
}

func (x *SpendDescription) GetValueCommitment() []byte {
	if x != nil {
		return x.ValueCommitment
	}
	return nil
}

func (x *SpendDescription) GetAnchor() []byte {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *SpendDescription) GetNullifier() []byte {
	if x != nil {
		return x.Nullifier
	}
	return nil
}

func (x *SpendDescription) GetRk() []byte {
	if x != nil {
		return x.Rk
	}
	return nil
}

func (x *SpendDescription) GetZkproof() []byte {
	if x != nil {
		return x.Zkproof
	}
	return nil
}

func (x *SpendDescription) GetSpendAuthoritySignature() []byte {
	if x != nil {
		return x.SpendAuthoritySignature
	}
	return nil
}

type ReceiveDescription struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ValueCommitment []byte                 `protobuf:"bytes,1,opt,name=value_commitment,json=valueCommitment,proto3" json:"value_commitment,omitempty"`
	NoteCommitment  []byte                 `protobuf:"bytes,2,opt,name=note_commitment,json=noteCommitment,proto3" json:"note_commitment,omitempty"`
	Epk             []byte                 `protobuf:"bytes,3,opt,name=epk,proto3" json:"epk,omitempty"`               // for Encryption
	CEnc            []byte                 `protobuf:"bytes,4,opt,name=c_enc,json=cEnc,proto3" json:"c_enc,omitempty"` // Encryption for incoming, decrypt it with ivk
	COut            []byte                 `protobuf:"bytes,5,opt,name=c_out,json=cOut,proto3" json:"c_out,omitempty"` // Encryption for audit, decrypt it with ovk
	Zkproof         []byte                 `protobuf:"bytes,6,opt,name=zkproof,proto3" json:"zkproof,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReceiveDescription) Reset() {
	*x = ReceiveDescription{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveDescription) ProtoMessage() {}

func (x *ReceiveDescription) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveDescription.ProtoReflect.Descriptor instead.
func (*ReceiveDescription) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{9}
}

func (x *ReceiveDescription) GetValueCommitment() []byte {
	if x != nil {
		return x.ValueCommitment
	}
	return nil
}

func (x *ReceiveDescription) GetNoteCommitment() []byte {
	if x != nil {
		return x.NoteCommitment
	}
	return nil
}

func (x *ReceiveDescription) GetEpk() []byte {
	if x != nil {
		return x.Epk
	}
	return nil
}

func (x *ReceiveDescription) GetCEnc() []byte {
	if x != nil {
		return x.CEnc
	}
	return nil
}

func (x *ReceiveDescription) GetCOut() []byte {
	if x != nil {
		return x.COut
	}
	return nil
}

func (x *ReceiveDescription) GetZkproof() []byte {
	if x != nil {
		return x.Zkproof
	}
	return nil
}

type ShieldedTransferContract struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TransparentFromAddress []byte                 `protobuf:"bytes,1,opt,name=transparent_from_address,json=transparentFromAddress,proto3" json:"transparent_from_address,omitempty"` // transparent address
	FromAmount             int64                  `protobuf:"varint,2,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount,omitempty"`
	SpendDescription       []*SpendDescription    `protobuf:"bytes,3,rep,name=spend_description,json=spendDescription,proto3" json:"spend_description,omitempty"`
	ReceiveDescription     []*ReceiveDescription  `protobuf:"bytes,4,rep,name=receive_description,json=receiveDescription,proto3" json:"receive_description,omitempty"`
	BindingSignature       []byte                 `protobuf:"bytes,5,opt,name=binding_signature,json=bindingSignature,proto3" json:"binding_signature,omitempty"`
	TransparentToAddress   []byte                 `protobuf:"bytes,6,opt,name=transparent_to_address,json=transparentToAddress,proto3" json:"transparent_to_address,omitempty"` // transparent address
	ToAmount               int64                  `protobuf:"varint,7,opt,name=to_amount,json=toAmount,proto3" json:"to_amount,omitempty"`                                      // the amount to transparent to_address
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ShieldedTransferContract) Reset() {
	*x = ShieldedTransferContract{}
	mi := &file_core_contract_shield_contract_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShieldedTransferContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShieldedTransferContract) ProtoMessage() {}

func (x *ShieldedTransferContract) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_shield_contract_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShieldedTransferContract.ProtoReflect.Descriptor instead.
func (*ShieldedTransferContract) Descriptor() ([]byte, []int) {
	return file_core_contract_shield_contract_proto_rawDescGZIP(), []int{10}
}

func (x *ShieldedTransferContract) GetTransparentFromAddress() []byte {
	if x != nil {
		return x.TransparentFromAddress
	}
	return nil
}

func (x *ShieldedTransferContract) GetFromAmount() int64 {
	if x != nil {
		return x.FromAmount
	}
	return 0
}

func (x *ShieldedTransferContract) GetSpendDescription() []*SpendDescription {
	if x != nil {
		return x.SpendDescription
	}
	return nil
}

func (x *ShieldedTransferContract) GetReceiveDescription() []*ReceiveDescription {
	if x != nil {
		return x.ReceiveDescription
	}
	return nil
}

func (x *ShieldedTransferContract) GetBindingSignature() []byte {
	if x != nil {
		return x.BindingSignature
	}
	return nil
}

func (x *ShieldedTransferContract) GetTransparentToAddress() []byte {
	if x != nil {
		return x.TransparentToAddress
	}
	return nil
}

func (x *ShieldedTransferContract) GetToAmount() int64 {
	if x != nil {
		return x.ToAmount
	}
	return 0
}

var File_core_contract_shield_contract_proto protoreflect.FileDescriptor

const file_core_contract_shield_contract_proto_rawDesc = "" +
	"\n" +
	"#core/contract/shield_contract.proto\x12\bprotocol\"*\n" +
	"\x12AuthenticationPath\x12\x14\n" +
	"\x05value\x18\x01 \x03(\bR\x05value\"\x83\x01\n" +
	"\n" +
	"MerklePath\x12O\n" +
	"\x14authentication_paths\x18\x01 \x03(\v2\x1c.protocol.AuthenticationPathR\x13authenticationPaths\x12\x14\n" +
	"\x05index\x18\x02 \x03(\bR\x05index\x12\x0e\n" +
	"\x02rt\x18\x03 \x01(\fR\x02rt\"7\n" +
	"\vOutputPoint\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\"d\n" +
	"\x0fOutputPointInfo\x124\n" +
	"\n" +
	"out_points\x18\x01 \x03(\v2\x15.protocol.OutputPointR\toutPoints\x12\x1b\n" +
	"\tblock_num\x18\x02 \x01(\x05R\bblockNum\"(\n" +
	"\fPedersenHash\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"\xa3\x01\n" +
	"\x15IncrementalMerkleTree\x12*\n" +
	"\x04left\x18\x01 \x01(\v2\x16.protocol.PedersenHashR\x04left\x12,\n" +
	"\x05right\x18\x02 \x01(\v2\x16.protocol.PedersenHashR\x05right\x120\n" +
	"\aparents\x18\x03 \x03(\v2\x16.protocol.PedersenHashR\aparents\"\xa5\x02\n" +
	"\x18IncrementalMerkleVoucher\x123\n" +
	"\x04tree\x18\x01 \x01(\v2\x1f.protocol.IncrementalMerkleTreeR\x04tree\x12.\n" +
	"\x06filled\x18\x02 \x03(\v2\x16.protocol.PedersenHashR\x06filled\x127\n" +
	"\x06cursor\x18\x03 \x01(\v2\x1f.protocol.IncrementalMerkleTreeR\x06cursor\x12!\n" +
	"\fcursor_depth\x18\x04 \x01(\x03R\vcursorDepth\x12\x0e\n" +
	"\x02rt\x18\x05 \x01(\fR\x02rt\x128\n" +
	"\foutput_point\x18\n" +
	" \x01(\v2\x15.protocol.OutputPointR\voutputPoint\"t\n" +
	"\x1cIncrementalMerkleVoucherInfo\x12>\n" +
	"\bvouchers\x18\x01 \x03(\v2\".protocol.IncrementalMerkleVoucherR\bvouchers\x12\x14\n" +
	"\x05paths\x18\x02 \x03(\fR\x05paths\"\xd9\x01\n" +
	"\x10SpendDescription\x12)\n" +
	"\x10value_commitment\x18\x01 \x01(\fR\x0fvalueCommitment\x12\x16\n" +
	"\x06anchor\x18\x02 \x01(\fR\x06anchor\x12\x1c\n" +
	"\tnullifier\x18\x03 \x01(\fR\tnullifier\x12\x0e\n" +
	"\x02rk\x18\x04 \x01(\fR\x02rk\x12\x18\n" +
	"\azkproof\x18\x05 \x01(\fR\azkproof\x12:\n" +
	"\x19spend_authority_signature\x18\x06 \x01(\fR\x17spendAuthoritySignature\"\xbe\x01\n" +
	"\x12ReceiveDescription\x12)\n" +
	"\x10value_commitment\x18\x01 \x01(\fR\x0fvalueCommitment\x12'\n" +
	"\x0fnote_commitment\x18\x02 \x01(\fR\x0enoteCommitment\x12\x10\n" +
	"\x03epk\x18\x03 \x01(\fR\x03epk\x12\x13\n" +
	"\x05c_enc\x18\x04 \x01(\fR\x04cEnc\x12\x13\n" +
	"\x05c_out\x18\x05 \x01(\fR\x04cOut\x12\x18\n" +
	"\azkproof\x18\x06 \x01(\fR\azkproof\"\x8d\x03\n" +
	"\x18ShieldedTransferContract\x128\n" +
	"\x18transparent_from_address\x18\x01 \x01(\fR\x16transparentFromAddress\x12\x1f\n" +
	"\vfrom_amount\x18\x02 \x01(\x03R\n" +
	"fromAmount\x12G\n" +
	"\x11spend_description\x18\x03 \x03(\v2\x1a.protocol.SpendDescriptionR\x10spendDescription\x12M\n" +
	"\x13receive_description\x18\x04 \x03(\v2\x1c.protocol.ReceiveDescriptionR\x12receiveDescription\x12+\n" +
	"\x11binding_signature\x18\x05 \x01(\fR\x10bindingSignature\x124\n" +
	"\x16transparent_to_address\x18\x06 \x01(\fR\x14transparentToAddress\x12\x1b\n" +
	"\tto_amount\x18\a \x01(\x03R\btoAmountBK\n" +
	"\x18org.tron.protos.contractZ/github.com/fbsobreira/gotron-sdk/pkg/proto/coreb\x06proto3"

var (
	file_core_contract_shield_contract_proto_rawDescOnce sync.Once
	file_core_contract_shield_contract_proto_rawDescData []byte
)

func file_core_contract_shield_contract_proto_rawDescGZIP() []byte {
	file_core_contract_shield_contract_proto_rawDescOnce.Do(func() {
		file_core_contract_shield_contract_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_contract_shield_contract_proto_rawDesc), len(file_core_contract_shield_contract_proto_rawDesc)))
	})
	return file_core_contract_shield_contract_proto_rawDescData
}

var file_core_contract_shield_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_core_contract_shield_contract_proto_goTypes = []any{
	(*AuthenticationPath)(nil),           // 0: protocol.AuthenticationPath
	(*MerklePath)(nil),                   // 1: protocol.MerklePath
	(*OutputPoint)(nil),                  // 2: protocol.OutputPoint
	(*OutputPointInfo)(nil),              // 3: protocol.OutputPointInfo
	(*PedersenHash)(nil),                 // 4: protocol.PedersenHash
	(*IncrementalMerkleTree)(nil),        // 5: protocol.IncrementalMerkleTree
	(*IncrementalMerkleVoucher)(nil),     // 6: protocol.IncrementalMerkleVoucher
	(*IncrementalMerkleVoucherInfo)(nil), // 7: protocol.IncrementalMerkleVoucherInfo
	(*SpendDescription)(nil),             // 8: protocol.SpendDescription
	(*ReceiveDescription)(nil),           // 9: protocol.ReceiveDescription
	(*ShieldedTransferContract)(nil),     // 10: protocol.ShieldedTransferContract
}
var file_core_contract_shield_contract_proto_depIdxs = []int32{
	0,  // 0: protocol.MerklePath.authentication_paths:type_name -> protocol.AuthenticationPath
	2,  // 1: protocol.OutputPointInfo.out_points:type_name -> protocol.OutputPoint
	4,  // 2: protocol.IncrementalMerkleTree.left:type_name -> protocol.PedersenHash
	4,  // 3: protocol.IncrementalMerkleTree.right:type_name -> protocol.PedersenHash
	4,  // 4: protocol.IncrementalMerkleTree.parents:type_name -> protocol.PedersenHash
	5,  // 5: protocol.IncrementalMerkleVoucher.tree:type_name -> protocol.IncrementalMerkleTree
	4,  // 6: protocol.IncrementalMerkleVoucher.filled:type_name -> protocol.PedersenHash
	5,  // 7: protocol.IncrementalMerkleVoucher.cursor:type_name -> protocol.IncrementalMerkleTree
	2,  // 8: protocol.IncrementalMerkleVoucher.output_point:type_name -> protocol.OutputPoint
	6,  // 9: protocol.IncrementalMerkleVoucherInfo.vouchers:type_name -> protocol.IncrementalMerkleVoucher
	8,  // 10: protocol.ShieldedTransferContract.spend_description:type_name -> protocol.SpendDescription
	9,  // 11: protocol.ShieldedTransferContract.receive_description:type_name -> protocol.ReceiveDescription
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_core_contract_shield_contract_proto_init() }
func file_core_contract_shield_contract_proto_init() {
	if File_core_contract_shield_contract_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_contract_shield_contract_proto_rawDesc), len(file_core_contract_shield_contract_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_contract_shield_contract_proto_goTypes,
		DependencyIndexes: file_core_contract_shield_contract_proto_depIdxs,
		MessageInfos:      file_core_contract_shield_contract_proto_msgTypes,
	}.Build()
	File_core_contract_shield_contract_proto = out.File
	file_core_contract_shield_contract_proto_goTypes = nil
	file_core_contract_shield_contract_proto_depIdxs = nil
}
