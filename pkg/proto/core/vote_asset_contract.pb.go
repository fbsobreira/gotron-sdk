// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: core/contract/vote_asset_contract.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoteAssetContract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerAddress  []byte                 `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	VoteAddress   [][]byte               `protobuf:"bytes,2,rep,name=vote_address,json=voteAddress,proto3" json:"vote_address,omitempty"`
	Support       bool                   `protobuf:"varint,3,opt,name=support,proto3" json:"support,omitempty"`
	Count         int32                  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteAssetContract) Reset() {
	*x = VoteAssetContract{}
	mi := &file_core_contract_vote_asset_contract_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteAssetContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteAssetContract) ProtoMessage() {}

func (x *VoteAssetContract) ProtoReflect() protoreflect.Message {
	mi := &file_core_contract_vote_asset_contract_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteAssetContract.ProtoReflect.Descriptor instead.
func (*VoteAssetContract) Descriptor() ([]byte, []int) {
	return file_core_contract_vote_asset_contract_proto_rawDescGZIP(), []int{0}
}

func (x *VoteAssetContract) GetOwnerAddress() []byte {
	if x != nil {
		return x.OwnerAddress
	}
	return nil
}

func (x *VoteAssetContract) GetVoteAddress() [][]byte {
	if x != nil {
		return x.VoteAddress
	}
	return nil
}

func (x *VoteAssetContract) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

func (x *VoteAssetContract) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_core_contract_vote_asset_contract_proto protoreflect.FileDescriptor

const file_core_contract_vote_asset_contract_proto_rawDesc = "" +
	"\n" +
	"'core/contract/vote_asset_contract.proto\x12\bprotocol\"\x8b\x01\n" +
	"\x11VoteAssetContract\x12#\n" +
	"\rowner_address\x18\x01 \x01(\fR\fownerAddress\x12!\n" +
	"\fvote_address\x18\x02 \x03(\fR\vvoteAddress\x12\x18\n" +
	"\asupport\x18\x03 \x01(\bR\asupport\x12\x14\n" +
	"\x05count\x18\x05 \x01(\x05R\x05countBK\n" +
	"\x18org.tron.protos.contractZ/github.com/fbsobreira/gotron-sdk/pkg/proto/coreb\x06proto3"

var (
	file_core_contract_vote_asset_contract_proto_rawDescOnce sync.Once
	file_core_contract_vote_asset_contract_proto_rawDescData []byte
)

func file_core_contract_vote_asset_contract_proto_rawDescGZIP() []byte {
	file_core_contract_vote_asset_contract_proto_rawDescOnce.Do(func() {
		file_core_contract_vote_asset_contract_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_contract_vote_asset_contract_proto_rawDesc), len(file_core_contract_vote_asset_contract_proto_rawDesc)))
	})
	return file_core_contract_vote_asset_contract_proto_rawDescData
}

var file_core_contract_vote_asset_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_core_contract_vote_asset_contract_proto_goTypes = []any{
	(*VoteAssetContract)(nil), // 0: protocol.VoteAssetContract
}
var file_core_contract_vote_asset_contract_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_core_contract_vote_asset_contract_proto_init() }
func file_core_contract_vote_asset_contract_proto_init() {
	if File_core_contract_vote_asset_contract_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_contract_vote_asset_contract_proto_rawDesc), len(file_core_contract_vote_asset_contract_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_contract_vote_asset_contract_proto_goTypes,
		DependencyIndexes: file_core_contract_vote_asset_contract_proto_depIdxs,
		MessageInfos:      file_core_contract_vote_asset_contract_proto_msgTypes,
	}.Build()
	File_core_contract_vote_asset_contract_proto = out.File
	file_core_contract_vote_asset_contract_proto_goTypes = nil
	file_core_contract_vote_asset_contract_proto_depIdxs = nil
}
